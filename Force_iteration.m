function [ torque ] = Force_iteration( theta, thetad, thetadd )
%初始化条件
m = [5.6431, 5.0478, 5.7542, 3.0870, 2.0459, 2.6317 ];

I_c(:,:,1) = [0.1183, -0.0001, 0.0001; -0.0001, 0.1182, 0.0001; 0.0001, 0.0001, 0.0140];
I_c(:,:,2) = [0.0723, 0.0000, -0.0051; 0.0000, 0.0784, 0.0000; -0.0051, 0.0000, 0.0169];
I_c(:,:,3) = [0.4263, 0.0000, -0.0072; 0.0000, 0.4334, 0.0001; -0.0072, 0.0001, 0.0191];
I_c(:,:,4) = [0.0821, 0.0000, -0.0314; 0.0000, 0.1257, 0.0001; -0.0314, 0.0001, 0.0451];
I_c(:,:,5) = [0.0235, 0.0000, -0.0002; 0.0000, 0.0253, 0.0000; -0.0002, 0.0000, 0.0045];
I_c(:,:,6) = [0.0684, 0.0000, 0.0001; 0.0000, 0.0696, -0.0001; 0.0001, -0.0001, 0.0047];

P_c(1,:) = [0.0002, 0.0002, 0.1264];
P_c(2,:) = [-0.0062, 0.0001, 0.1080];
P_c(3,:) = [-0.0131, 0.0001, 0.2402];
P_c(4,:) = [-0.0850, 0.0003, 0.1540];
P_c(5,:) = [0.0001, 0.0002, 0.0982];
P_c(6,:) = [-0.0111, -0.0003, 0.1366];

f = zeros(3,7);
n = zeros(3,7);
F = zeros(3,6);
N = zeros(3,6);
torque = zeros(1,6);
 
T = f_kinematics(theta);

%惯性矩在连杆坐标系
I_p = zeros(3,3,6);
I_para = zeros(6,1,6);
I = [1 0 0;
     0 1 0;
     0 0 1];
for i=1:6
    I_p(:,:,i) = I_c(:,:,i) + m(i) * (P_c(i,:) * P_c(i,:).' * I - P_c(i,:).' * P_c(i,:));
    I_para(1,1,i) = I_p(1,1,i);
    I_para(2,1,i) = -I_p(1,2,i);
    I_para(3,1,i) = -I_p(1,3,i);
    I_para(4,1,i) = I_p(2,2,i);
    I_para(5,1,i) = -I_p(2,3,i);
    I_para(6,1,i) = I_p(3,3,i);
end

%

[ W, ~, Ang_acc, acc, acc_c ] = Velocity_iteration(  P_c, theta, thetad, thetadd );

for i=1:5
    T(:,:,i) = T(:,:,i+1);
end


    
for i=6:-1:1
    i_iadd1_T = T(:,:,i);
    i_iadd1_R = i_iadd1_T(1:3,1:3);
    i_P_iadd1 = i_iadd1_T(1:3,4); 
    
    F(:,i) = m(i) * acc_c(:,i);
%     N(:,i) = I_c(:,:,i) * Ang_acc(:,i+1) + cross(W(:,i+1), I_c(:,:,i) * W(:,i+1));
%     N(:,i) = I_p(:,:,i) * Ang_acc(:,i+1) + S_w(W(:,i+1)) * I_p(:,:,i) * W(:,i+1) - S_w(acc(:,i+1)) * m(i) * P_c(i,:).';
    N(:,i) = K_w(Ang_acc(:,i+1)) * I_para(:,:,i) + S_w(W(:,i+1)) * (K_w(W(:,i+1)) * I_para(:,:,i)) - S_w(acc(:,i+1)) * (m(i) * P_c(i,:).');
    
    f(:,i) = i_iadd1_R * f(:,i+1) + F(:,i);
%     n(:,i) = i_iadd1_R * n(:,i+1) + N(:,i) + cross(P_c(i,:).', F(:,i)) + cross(i_P_iadd1, i_iadd1_R * f(:,i+1));
    n(:,i) = i_iadd1_R * n(:,i+1) + N(:,i) + S_w(i_P_iadd1) * (i_iadd1_R * f(:,i+1));
    
    torque(i) = n(3,i);
end
end

